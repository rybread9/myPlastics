<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>myPlastics</title>
    <link rel="stylesheet" type="text/css" href="/main.css">
    <!-- <link rel="data" type="text" href="../models/topTen.js"> -->
    <script src="https://d3js.org/d3.v5.min.js"></script>
    <script src="https://d3js.org/d3-color.v1.min.js"></script>
    <script src="https://d3js.org/d3-interpolate.v1.min.js"></script>
    <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>

  </head>
  <body>
    <main>

      <div class="top">
        <div class="nav">
          <div class="title">
            myPlastics
          </div>
          <div class="navLinks">
            <div class="link">
              Individual
            </div>
            <div class="link">
              Community
            </div>
            <div class="link">
              Solutions
            </div>
          </div>
        </div>
        <div id="problem">
          <span id="text">As inhabitants of Earth, we have a very urgent problem that desperately needs our attention. </span>
          <a href="/myPlastics/form" id="button">Learn More</a>
        </div>

      </div>
      <div class="second">
        <div class="inner">
            <div id="legos">
              <div>Around the year 1950, plastic became popular. This exciting new material was durable and cheaply made, allowing its use to become wide-spread.</div>
            </div>
            <!-- <img src="/images/legos-iker-urteaga.jpeg" alt="Image courtesy of rawpixel at unsplash.com"> -->
        </div>

        <div class="inner">
          <div id="store">
            <div>Now, the most common use for plastic is single-use packaging.  </div>
          </div>

        </div>

        <div class="inner">
          <div id="fish">
            <div>Plastic is filling up our oceans and our natural environment. It is estimated that by the year 2050, there will be more plastic in our ocean than fish.</div>
          </div>

        </div>
      </div>

      <div class="third">
        <div class="topTen">
          <!-- <svg id="chart"></svg> -->
        </div>
      </div>

      <!-- <svg width="100" height="100">
        <circle id="myCircle" cx="50" cy="50" r="30"></circle>
      </svg> -->

    </main>
    <script type="text/javascript">

      // const circleDemo = d3.select("#myCircle");
      //   circleDemo.attr("r", 40)
      //             .style("stroke", "purple")
      //             .style("fill", "orange");

      // let topTen = require('./models/data.js');

      let topTen = [
        {
          item: "Cigarette Butts",
          amount: 2412151
        },
        {
          item: "Food Wrappers",
          amount: 1739743
        },
        {
          item: "Plastic Bottles",
          amount: 1569135
        },
        {
          item: "Plastic Bottle Caps",
          amount: 1091107
        },
        {
          item: "Plastic Grocery Bags",
          amount: 757523
        },
        {
          item: "Other Plastic Bags",
          amount: 746211
        },
        {
          item: "Straws & Stirrers",
          amount: 643562
        },
        {
          item: "Plastic Take Out Containers",
          amount: 632874
        },
        {
          item: "Plastic Lids",
          amount: 624878
        },
        {
          item: "Foam Take Out Containers",
          amount: 580570
        }
      ];


      // parameters of chart dimension
      const w = 800;
      const h = 550;
      const margin = {
        top: 60,
        bottom: 150,
        left: 100,
        right: 40
      }
      // height and width of "g" element which holds bars
      const width = w - margin.left - margin.right;
      const height = h - margin.top - margin.bottom;


      const x = d3.scaleBand()
                  .domain(topTen.map(function(entry){
                    return entry.item;
                  }))
                  // rangebands will create distinct values according to the distinct values in the domain
                  .range([0,width]);
      const y = d3.scaleLinear()
                  .domain([0, d3.max(topTen, function(d){
                    return d.amount
                  })])
                  .range([height, 0]);

      // color the chart bars
      const ordinalColorScale = d3.scaleOrdinal(d3.schemeCategory10);

      // create axis for chart
      const xAxis = d3.axisBottom()
                      .scale(x);
      const yAxis = d3.axisLeft()
                      .scale(y);
      const yGridlines = d3.axisLeft()
                            .scale(y)
                            .tickSize(-width, 0,0)
                            .tickFormat("");
      // console.log(y("Food Wrappers"));
      // create chart with <svg> element
      const svg = d3.select(".topTen").append("svg")
        .attr("id", "chart")
        .attr("width", w)
        .attr("height", h);

      // "g" element is sort of like a div. you can't see it. it holds other elements inside of it and allows you to manipulate these children elements.
      const chart = svg.append("g")
                        .classed("display", true)
                        .attr("transform", "translate("+margin.left+","+margin.top+")");

      function plot(params){
        // console.log(this);
        this.append("g")
            .call(yGridlines)
            .classed("gridline", true)
            .attr("transform", "translate(0,0)")
        // DRAW THE BARS
        this.selectAll(".bar")
            .data(params.topTen)
            // enter phase: first time the topTen is bound. bind topTen to everything that follows
            .enter()
              // append a rectangle element for each piece of topTen- this will be the bar
              .append("rect")
              .classed("bar", true)
              .attr("x", function(d,i){
                return x(d.item);
              })
              .attr("y", function(d,i){
                return y(d.amount);
              })
              .attr("width", function(d,i){
                // return x(d.item);
                return x.bandwidth();
              })
              .attr("height", function(d,i){
                // return y.bandwidth()-1;
                return height - y(d.amount)
              })
              .style("fill", function(d,i){
                return ordinalColorScale(i);
              });
        // LABEL THE BARS
        this.selectAll(".bar-label")
            .data(params.topTen)
            .enter()
              .append("text")
              .classed("bar-label", true)
              .attr("x", function(d,i){
                return x(d.item) + (x.bandwidth()/2)
              })
              .attr("y", function(d,i){
                return y(d.amount);
              })
              // dy allows us to "nudge" the label
              .attr("dy", -6)
              .attr("dx", 0)
              .text(function(d,i){
                return d.amount;
              });

        this.append("g")
            .classed("x axis", true)
            .attr("transform", "translate("+ 0 +","+ height +")")
            .call(xAxis)
                .selectAll("text")
                    .style("text-anchor", "end")
                    .attr("dx", -8)
                    .attr("dy", 8)
                    .attr("transform", "translate(0,0) rotate(-45)");

        this.append("g")
            .classed("y axis", true)
            .attr("transform", "translate(0,0)")
            .call(yAxis);

        this.select(".y.axis")
            .append("text")
            .attr("x", 0)
            .attr("y", 0)
            .style("text-anchor", "middle")
            .attr("transform", "translate(-50,"+ height/2 +") rotate(-90)")
            .text("Units Consumed");

        this.select(".x.axis")
            .append("text")
            .attr("x", 0)
            .attr("y", 0)
            .style("text-anchor", "middle")
            .attr("transform", "translate(" + width/2 + ",80)")
            .text("Items Consumed")
      }

      plot.call(chart, {
        topTen: topTen
      });


    </script>
  </body>
</html>
